{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\Project to Work__Git_Hub\\\\SocialNetwork_SQL+React\\\\my-app\\\\src\\\\components\\\\user\\\\profile\\\\profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { profile } from '../../../actions/register-actions';\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderUsersList = users => {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, users.map(user => React.createElement(\"li\", {\n        key: user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: '/userprofile/' + this.props.allUser.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.props.allUser.name, \" \", this.props.allUser.surname))));\n    };\n\n    fetch('http://localhost:3300/user/profile', {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': this.props.token.type + ' ' + this.props.token.accessToken\n      },\n      method: 'GET'\n    }).then(response => response.json()).then(data => {\n      this.props.profile(data);\n    });\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch('http://localhost:3300/user?name=' + this.state.text, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': this.props.token.type + ' ' + this.props.token.accessToken\n      },\n      method: 'GET'\n    }).then(response => response.json()).then(data => {\n      this.props.profile(data);\n    });\n  }\n\n  render() {\n    let usersContent = this.props.allUser > 0 ? renderUsersList(this.props.allUser) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"User not found\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"My profile  \", this.props.accessUser.id, \", \", this.props.accessUser.name, \", \", this.props.accessUser.surname, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Find By Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"text\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, usersContent));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token,\n    accessUser: state.accessUser,\n    text: state.text,\n    allUser: state.allUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    profile: payload => dispatch(profile(payload))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["D:\\Web\\Project to Work__Git_Hub\\SocialNetwork_SQL+React\\my-app\\src\\components\\user\\profile\\profile.js"],"names":["React","Component","connect","profile","Profile","constructor","props","renderUsersList","users","map","user","id","allUser","name","surname","fetch","headers","token","type","accessToken","method","then","response","json","data","handleChange","bind","handleSubmit","event","target","value","setState","preventDefault","state","text","render","usersContent","accessUser","mapStateToProps","mapDispatchToProps","dispatch","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,mCAAxB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAE5BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA4CnBC,eA5CmB,GA4CAC,KAAD,IAAY;AAC1B,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,KAAK,CAACC,GAAN,CAAUC,IAAI,IACX;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,IAAI,EAAE,kBAAkB,KAAKL,KAAL,CAAWM,OAAX,CAAmBD,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmD,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,IAAtE,OAA6E,KAAKP,KAAL,CAAWM,OAAX,CAAmBE,OAAhG,CADJ,CADH,CADL,CADJ;AASH,KAtDkB;;AAGfC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AACxCC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,kBAFX;AAGL,yBAAiB,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,IAAjB,GAAwB,GAAxB,GAA8B,KAAKZ,KAAL,CAAWW,KAAX,CAAiBE;AAH3D,OAD+B;AAMxCC,MAAAA,MAAM,EAAE;AANgC,KAAvC,CAAL,CAQCC,IARD,CAQMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARlB,EASCF,IATD,CASMG,IAAI,IAAI;AACV,WAAKlB,KAAL,CAAWH,OAAX,CAAmBqB,IAAnB;AACH,KAXD;AAaA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAAA,0BACQA,KAAK,CAACC,MADd;AAAA,UACRhB,IADQ,iBACRA,IADQ;AAAA,UACFiB,KADE,iBACFA,KADE;AAEhB,SAAKC,QAAL,CAAc;AACV,OAAClB,IAAD,GAAQiB;AADE,KAAd;AAGH;;AAEDH,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACI,cAAN;AACAjB,IAAAA,KAAK,CAAC,qCAAqC,KAAKkB,KAAL,CAAWC,IAAjD,EAAuD;AACxDlB,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,kBAFX;AAGL,yBAAiB,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,IAAjB,GAAwB,GAAxB,GAA8B,KAAKZ,KAAL,CAAWW,KAAX,CAAiBE;AAH3D,OAD+C;AAMxDC,MAAAA,MAAM,EAAE;AANgD,KAAvD,CAAL,CAQCC,IARD,CAQMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARlB,EASCF,IATD,CASMG,IAAI,IAAI;AACV,WAAKlB,KAAL,CAAWH,OAAX,CAAmBqB,IAAnB;AACH,KAXD;AAaH;;AAcDW,EAAAA,MAAM,GAAG;AAEL,QAAIC,YAAY,GAAG,KAAK9B,KAAL,CAAWM,OAAX,GAAqB,CAArB,GAAyBL,eAAe,CAAC,KAAKD,KAAL,CAAWM,OAAZ,CAAxC,GAA+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAlF;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACgB,KAAKN,KAAL,CAAW+B,UAAX,CAAsB1B,EADtC,QAC4C,KAAKL,KAAL,CAAW+B,UAAX,CAAsBxB,IADlE,QAC0E,KAAKP,KAAL,CAAW+B,UAAX,CAAsBvB,OADhG,EAEG;AAAM,MAAA,QAAQ,EAAE,KAAKa,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,QAAQ,EAAE,KAAKF,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADL,EAIK;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJL,CAFH,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKW,YADL,CATJ,CADJ;AAeH;;AA5E2B;;AAgFhC,MAAME,eAAe,GAAIL,KAAD,IAAW;AAC/B,SAAO;AACHhB,IAAAA,KAAK,EAAEgB,KAAK,CAAChB,KADV;AAEHoB,IAAAA,UAAU,EAAEJ,KAAK,CAACI,UAFf;AAGHH,IAAAA,IAAI,EAAED,KAAK,CAACC,IAHT;AAIHtB,IAAAA,OAAO,EAAEqB,KAAK,CAACrB;AAJZ,GAAP;AAMH,CAPD;;AASA,MAAM2B,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHrC,IAAAA,OAAO,EAAGsC,OAAD,IAAaD,QAAQ,CAACrC,OAAO,CAACsC,OAAD,CAAR;AAD3B,GAAP;AAGH,CAJD;;AAKA,eAAevC,OAAO,CAACoC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CnC,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { profile } from '../../../actions/register-actions'\r\n\r\nclass Profile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n   \r\n        fetch('http://localhost:3300/user/profile', {\r\n            headers: { \r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token.type + ' ' + this.props.token.accessToken\r\n            },\r\n            method: 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {                          \r\n            this.props.profile(data);            \r\n        });\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        fetch('http://localhost:3300/user?name=' + this.state.text, {\r\n            headers: { \r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token.type + ' ' + this.props.token.accessToken\r\n            },\r\n            method: 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.props.profile(data);\r\n        });\r\n\r\n    };\r\n\r\n    renderUsersList = (users)  => {\r\n        return (\r\n            <ul>  \r\n                {users.map(user =>\r\n                    <li key={user.id}> \r\n                        <a href={'/userprofile/' + this.props.allUser.id}>{this.props.allUser.name} {this.props.allUser.surname}</a>     \r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    render() {\r\n       \r\n        let usersContent = this.props.allUser > 0 ? renderUsersList(this.props.allUser) : <div>User not found</div>;\r\n        return (\r\n            <div>\r\n               My profile  {this.props.accessUser.id}, {this.props.accessUser.name}, {this.props.accessUser.surname}\r\n               <form onSubmit={this.handleSubmit}>\r\n                    <label>Find By Name:\r\n                        <input type=\"text\" name=\"text\" onChange={this.handleChange} />\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n\r\n                <div >\r\n                    {usersContent} \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.token, \r\n        accessUser: state.accessUser,\r\n        text: state.text,\r\n        allUser: state.allUser\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        profile: (payload) => dispatch(profile(payload)),\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);"]},"metadata":{},"sourceType":"module"}