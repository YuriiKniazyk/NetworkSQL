{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\Project to Work__Git_Hub\\\\SocialNetwork_SQL+React\\\\my-app\\\\src\\\\components\\\\forgotePassword\\\\updatePassword.js\";\nimport React, { Component } from 'react';\nimport defaultOptionenWithOutAuth from '../../helpers/requestHeader/defaultOptionenWithOutAuth';\nimport { connect } from 'react-redux';\nimport { updatePassword } from '../../actions/register-actions';\n\nclass UpdataPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch('http://localhost:3300/login/user/forgotchangepassword', {\n      headers: defaultOptionenWithOutAuth.headers,\n      method: 'PUT',\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        passwordVerify: this.state.passwordVerify,\n        forgotecodes: this.state.forgotecodes\n      })\n    }).then(response => response.json()).then(data => {\n      this.props.updatePassword(data);\n      console.log(data);\n\n      if (this.props.msg === 'WHERE parameter \"forgotecodes\" has invalid \"undefined\" value') {\n        alert('Please enter codes!');\n      }\n\n      if (this.props.msg === 'User is not register!!!!') {\n        alert('Please cheked your data!');\n      }\n\n      if (this.props.msg === 'Wrong password or passwordVerify') {\n        alert('Wrong password or passwordVerify. Please cheked your password!!');\n      }\n\n      if (this.props.succses === true) {\n        this.props.history.push(\"/login\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Email:\", React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Password:\", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Verify password:\", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"passwordVerify\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Enter your codes:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"forgotecodes\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  email,\n  succses,\n  forgotecodes,\n  passwordVerify,\n  msg\n}) => {\n  return {\n    email,\n    forgotecodes,\n    succses,\n    msg,\n    passwordVerify\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updatePassword: payload => dispatch(updatePassword(payload))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdataPassword);","map":{"version":3,"sources":["D:\\Web\\Project to Work__Git_Hub\\SocialNetwork_SQL+React\\my-app\\src\\components\\forgotePassword\\updatePassword.js"],"names":["React","Component","defaultOptionenWithOutAuth","connect","updatePassword","UpdataPassword","constructor","props","handleChange","bind","handleSubmit","event","target","name","value","setState","preventDefault","fetch","headers","method","body","JSON","stringify","email","state","password","passwordVerify","forgotecodes","then","response","json","data","console","log","msg","alert","succses","history","push","render","mapStateToProps","mapDispatchToProps","dispatch","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,0BAAP,MAAuC,wDAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,gCAA/B;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AACnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAAA,0BACQA,KAAK,CAACC,MADd;AAAA,UACRC,IADQ,iBACRA,IADQ;AAAA,UACFC,KADE,iBACFA,KADE;AAGhB,SAAKC,QAAL,CAAc;AACV,OAACF,IAAD,GAAQC;AADE,KAAd;AAGH;;AAEDJ,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACK,cAAN;AAEAC,IAAAA,KAAK,CAAC,uDAAD,EAA0D;AAC3DC,MAAAA,OAAO,EAAEhB,0BAA0B,CAACgB,OADuB;AAE3DC,MAAAA,MAAM,EAAE,KAFmD;AAG3DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAApB;AAA2BE,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAhD;AAA0DC,QAAAA,cAAc,EAAE,KAAKF,KAAL,CAAWE,cAArF;AAAqGC,QAAAA,YAAY,EAAE,KAAKH,KAAL,CAAWG;AAA9H,OAAf;AAHqD,KAA1D,CAAL,CAKKC,IALL,CAKUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALtB,EAMKF,IANL,CAMUG,IAAI,IAAI;AACV,WAAKxB,KAAL,CAAWH,cAAX,CAA0B2B,IAA1B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAG,KAAKxB,KAAL,CAAW2B,GAAX,KAAmB,8DAAtB,EAAqF;AACjFC,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACH;;AAED,UAAG,KAAK5B,KAAL,CAAW2B,GAAX,KAAmB,0BAAtB,EAAkD;AAC9CC,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACH;;AAED,UAAG,KAAK5B,KAAL,CAAW2B,GAAX,KAAmB,kCAAtB,EAA0D;AACtDC,QAAAA,KAAK,CAAC,iEAAD,CAAL;AACH;;AAED,UAAG,KAAK5B,KAAL,CAAW6B,OAAX,KAAuB,IAA1B,EAAgC;AAC5B,aAAK7B,KAAL,CAAW8B,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;AACJ,KAxBL;AAyBH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAK7B,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,OAAzB;AAAiC,MAAA,QAAQ,EAAE,KAAKF,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,QAAQ,EAAE,KAAKA,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,gBAA5B;AAA6C,MAAA,QAAQ,EAAE,KAAKA,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,cAAxB;AAAuC,MAAA,QAAQ,EAAE,KAAKA,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,EAaI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADJ,CADJ;AAmBH;;AAlEkC;;AAqEvC,MAAMgC,eAAe,GAAG,CAAC;AAACjB,EAAAA,KAAD;AAAQa,EAAAA,OAAR;AAAiBT,EAAAA,YAAjB;AAA+BD,EAAAA,cAA/B;AAA+CQ,EAAAA;AAA/C,CAAD,KAAyD;AAC7E,SAAO;AACHX,IAAAA,KADG;AAEHI,IAAAA,YAFG;AAGHS,IAAAA,OAHG;AAIHF,IAAAA,GAJG;AAKHR,IAAAA;AALG,GAAP;AAOH,CARD;;AAUA,MAAMe,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHtC,IAAAA,cAAc,EAAGuC,OAAD,IAAaD,QAAQ,CAACtC,cAAc,CAACuC,OAAD,CAAf;AADlC,GAAP;AAGH,CAJD;;AAMA,eAAexC,OAAO,CAACqC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CpC,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport defaultOptionenWithOutAuth from '../../helpers/requestHeader/defaultOptionenWithOutAuth';\r\nimport { connect } from 'react-redux';\r\nimport { updatePassword } from '../../actions/register-actions';\r\n\r\nclass UpdataPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        fetch('http://localhost:3300/login/user/forgotchangepassword', {\r\n            headers: defaultOptionenWithOutAuth.headers,\r\n            method: 'PUT',\r\n            body: JSON.stringify({ email: this.state.email, password: this.state.password, passwordVerify: this.state.passwordVerify, forgotecodes: this.state.forgotecodes })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.props.updatePassword(data);\r\n                console.log(data);\r\n                if(this.props.msg === 'WHERE parameter \"forgotecodes\" has invalid \"undefined\" value'){\r\n                    alert('Please enter codes!')\r\n                }\r\n\r\n                if(this.props.msg === 'User is not register!!!!') {\r\n                    alert('Please cheked your data!');\r\n                }\r\n\r\n                if(this.props.msg === 'Wrong password or passwordVerify') {\r\n                    alert('Wrong password or passwordVerify. Please cheked your password!!');\r\n                }\r\n                \r\n                if(this.props.succses === true) {\r\n                    this.props.history.push(\"/login\");\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>Email:\r\n                        <input type=\"email\" name=\"email\" onChange={this.handleChange} />\r\n                    </label>\r\n                    <label>Password:\r\n                        <input type=\"password\" name=\"password\" onChange={this.handleChange} />\r\n                    </label>\r\n                    <label>Verify password:\r\n                        <input type=\"password\" name=\"passwordVerify\" onChange={this.handleChange} />\r\n                    </label>\r\n                    <label>Enter your codes:\r\n                        <input type=\"text\" name=\"forgotecodes\" onChange={this.handleChange} />\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nconst mapStateToProps = ({email, succses, forgotecodes, passwordVerify, msg}) => {\r\n    return {\r\n        email,\r\n        forgotecodes,\r\n        succses,\r\n        msg,\r\n        passwordVerify\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updatePassword: (payload) => dispatch(updatePassword(payload)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdataPassword);"]},"metadata":{},"sourceType":"module"}