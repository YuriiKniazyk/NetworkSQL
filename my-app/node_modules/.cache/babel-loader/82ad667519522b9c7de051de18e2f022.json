{"ast":null,"code":"import _defineProperty from \"D:\\\\Web\\\\Project to Work__Git_Hub\\\\SocialNetwork_SQL+React\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { REGISTER, LOGIN, AUTHORIZATION, LOGOUT, PROFILE, FINDBYNAME } from \"../action-types\";\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst initialState = {\n  name: '',\n  surname: '',\n  email: '',\n  password: '',\n  token: null,\n  accessUser: {\n    id: '',\n    name: '',\n    surname: ''\n  },\n  text: '',\n  users: [{\n    allUser: {\n      id: '',\n      name: '',\n      surname: ''\n    }\n  }]\n};\nconst persistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token']\n};\n\nconst reducer = (state = initialState, action) => {\n  const payload = action.payload;\n\n  switch (action.type) {\n    case REGISTER:\n      return _objectSpread({}, state);\n\n    case LOGIN:\n      return _objectSpread({}, state, {}, payload);\n\n    case AUTHORIZATION:\n      return _objectSpread({}, state, {}, payload);\n\n    case LOGOUT:\n      return _objectSpread({}, state, {\n        token: null\n      });\n\n    case PROFILE:\n      return _objectSpread({}, state, {}, payload);\n\n    case FINDBYNAME:\n      return _objectSpread({}, state, {}, payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default persistReducer(persistConfig, reducer);","map":{"version":3,"sources":["D:\\Web\\Project to Work__Git_Hub\\SocialNetwork_SQL+React\\my-app\\src\\reducer\\index.js"],"names":["REGISTER","LOGIN","AUTHORIZATION","LOGOUT","PROFILE","FINDBYNAME","persistReducer","storage","initialState","name","surname","email","password","token","accessUser","id","text","users","allUser","persistConfig","key","whitelist","reducer","state","action","payload","type"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,KAAnB,EAA0BC,aAA1B,EAAyCC,MAAzC,EAAiDC,OAAjD,EAA0DC,UAA1D,QAA4E,iBAA5E;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,QAAQ,EAAE,EAJO;AAKjBC,EAAAA,KAAK,EAAE,IALU;AAMjBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,EAAE,EAAE,EADI;AAERN,IAAAA,IAAI,EAAE,EAFE;AAGRC,IAAAA,OAAO,EAAE;AAHD,GANK;AAWjBM,EAAAA,IAAI,EAAE,EAXW;AAYjBC,EAAAA,KAAK,EAAE,CAAC;AACAC,IAAAA,OAAO,EAAE;AACLH,MAAAA,EAAE,EAAE,EADC;AAELN,MAAAA,IAAI,EAAE,EAFD;AAGLC,MAAAA,OAAO,EAAE;AAHJ;AADT,GAAD;AAZU,CAArB;AAuBA,MAAMS,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,OADa;AAElBb,EAAAA,OAFkB;AAGlBc,EAAAA,SAAS,EAAE,CAAC,OAAD;AAHO,CAAtB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGf,YAAT,EAAuBgB,MAAvB,KAAkC;AAC9C,QAAMC,OAAO,GAAGD,MAAM,CAACC,OAAvB;;AAEA,UAAOD,MAAM,CAACE,IAAd;AACI,SAAK1B,QAAL;AACI,+BAAWuB,KAAX;;AAEJ,SAAKtB,KAAL;AACI,+BAAWsB,KAAX,MAAqBE,OAArB;;AAEJ,SAAKvB,aAAL;AACI,+BAAWqB,KAAX,MAAqBE,OAArB;;AAEJ,SAAKtB,MAAL;AACI,+BAAWoB,KAAX;AAAkBV,QAAAA,KAAK,EAAE;AAAzB;;AAEJ,SAAKT,OAAL;AACI,+BAAWmB,KAAX,MAAqBE,OAArB;;AAEJ,SAAKpB,UAAL;AACI,+BAAWkB,KAAX,MAAqBE,OAArB;;AAIJ;AAAS,aAAOF,KAAP;AArBb;AAuBH,CA1BD;;AA4BA,eAAejB,cAAc,CAACa,aAAD,EAAgBG,OAAhB,CAA7B","sourcesContent":["import { REGISTER, LOGIN, AUTHORIZATION, LOGOUT, PROFILE, FINDBYNAME } from \"../action-types\";\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst initialState = {\r\n    name: '',\r\n    surname: '',\r\n    email: '',\r\n    password: '',\r\n    token: null,\r\n    accessUser: {\r\n        id: '',\r\n        name: '',\r\n        surname: ''\r\n    },\r\n    text: '',\r\n    users: [{\r\n            allUser: {\r\n                id: '',\r\n                name: '',\r\n                surname: ''\r\n            }\r\n        }]\r\n\r\n    \r\n}; \r\n\r\nconst persistConfig = {\r\n    key: 'token',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const payload = action.payload;\r\n\r\n    switch(action.type){\r\n        case REGISTER: \r\n            return {...state};\r\n\r\n        case LOGIN: \r\n            return {...state, ...payload};\r\n\r\n        case AUTHORIZATION: \r\n            return {...state, ...payload};\r\n\r\n        case LOGOUT: \r\n            return {...state, token: null};\r\n\r\n        case PROFILE: \r\n            return {...state, ...payload};\r\n        \r\n        case FINDBYNAME: \r\n            return {...state, ...payload};\r\n\r\n\r\n\r\n        default: return state;\r\n    }\r\n};\r\n  \r\nexport default persistReducer(persistConfig, reducer)"]},"metadata":{},"sourceType":"module"}