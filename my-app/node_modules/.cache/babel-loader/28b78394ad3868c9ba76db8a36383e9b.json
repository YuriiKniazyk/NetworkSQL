{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\Project to Work__Git_Hub\\\\SocialNetwork_SQL+React\\\\my-app\\\\src\\\\components\\\\user\\\\profile\\\\profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { profile } from '../../../actions/register-actions';\nimport DefaultOptionen from '../../../helpers/defaultOptions';\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //     id: 0,\n    //     name: '',\n    //     surname: '',\n    //     text: '',\n    //     users: []\n    // };\n\n    this.props.profile({\n      id: this.props.id,\n      name: this.props.name,\n      surname: this.props.surname\n    });\n    fetch('http://localhost:3300/user/profile', {\n      headers: DefaultOptionen.headers,\n      method: 'GET'\n    }).then(response => response.json()).then(data => {\n      this.props.authorization(data);\n      this.setState({\n        id: data.accessUser.id,\n        name: data.accessUser.name,\n        surname: data.accessUser.surname\n      });\n    });\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch('http://localhost:3300/user?name=' + this.props.text, {\n      headers: DefaultOptionen.headers,\n      method: 'GET'\n    }).then(response => response.json()).then(data => {\n      this.setState(state => {\n        let oldState = state;\n        oldState.users = data.accessUser;\n        return oldState;\n      });\n    });\n  }\n\n  static renderUsersList(users) {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, users.map(user => React.createElement(\"li\", {\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: '/userprofile/' + user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, user.name, \" \", user.surname))));\n  }\n\n  render() {\n    let usersContent = this.props.users > 0 ? Profile.renderUsersList(this.props.users) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"User not found\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"My profile\", this.props.id, \", \", this.props.name, \", \", this.props.surname, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Find By Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"text\",\n      value: this.props.text,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, usersContent));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    profile: payload => dispatch(profile(payload))\n  };\n};\n\nexport default connect(undefined, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["D:\\Web\\Project to Work__Git_Hub\\SocialNetwork_SQL+React\\my-app\\src\\components\\user\\profile\\profile.js"],"names":["React","Component","connect","profile","DefaultOptionen","Profile","constructor","props","id","name","surname","fetch","headers","method","then","response","json","data","authorization","setState","accessUser","handleChange","bind","handleSubmit","event","target","value","preventDefault","text","state","oldState","users","renderUsersList","map","user","render","usersContent","mapDispatchToProps","dispatch","payload","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { profile } from '../../../actions/register-actions'\r\nimport DefaultOptionen from '../../../helpers/defaultOptions'\r\n\r\nclass Profile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // this.state = {\r\n        //     id: 0,\r\n        //     name: '',\r\n        //     surname: '',\r\n        //     text: '',\r\n        //     users: []\r\n        // };\r\n        this.props.profile({ id: this.props.id, name: this.props.name, surname: this.props.surname });\r\n\r\n        fetch('http://localhost:3300/user/profile', {\r\n            headers: DefaultOptionen.headers,\r\n            method: 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.props.authorization(data)            \r\n            this.setState({id: data.accessUser.id, name: data.accessUser.name, surname: data.accessUser.surname});\r\n        });\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        fetch('http://localhost:3300/user?name=' + this.props.text, {\r\n            headers: DefaultOptionen.headers,\r\n            method: 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {            \r\n            this.setState((state) => {\r\n\r\n                let oldState = state;\r\n                oldState.users = data.accessUser;\r\n                return oldState;\r\n            });            \r\n        });\r\n\r\n    };\r\n\r\n    static renderUsersList(users) {\r\n        return (\r\n            <ul>  \r\n                {users.map(user =>\r\n                    <li key={user.id}> \r\n                        <a href={'/userprofile/' + user.id}>{user.name} {user.surname}</a>     \r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    render() {\r\n       \r\n        let usersContent = this.props.users > 0 ? Profile.renderUsersList(this.props.users) : <div>User not found</div>;\r\n        return (\r\n            <div>\r\n               My profile\r\n               {this.props.id}, {this.props.name}, {this.props.surname}\r\n\r\n               <form onSubmit={this.handleSubmit}>\r\n                    <label>Find By Name:\r\n                <input type=\"text\" name=\"text\" value={this.props.text} onChange={this.handleChange} />\r\n                    </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n\r\n                <div >\r\n                    {usersContent} \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n       profile: (payload) => dispatch(profile(payload))\r\n    }\r\n};\r\n\r\nexport default connect(undefined, mapDispatchToProps)(Profile);"]},"metadata":{},"sourceType":"module"}